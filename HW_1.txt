GIT Homework 1

JSON
 1. Создать внешний репозиторий c названием JSON.
    	https://github.com/new
 2. Клонировать репозиторий JSON на локальный компьютер.
	"git clone URL"
 3. Внутри локального JSON создать файл “new.json”.
	"touch new.json"
 4. Добавить файл под гит.
	"git add new.json"
 5. Закоммитить файл.
	"git commit -m 'added file new.json'"
 6. Отправить файл на внешний GitHub репозиторий.
	"git push" 
7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	"echo '{
	"Name" : "Kokos",
	"age" : "35",
	"salary" : "5000",
	"pets" : "2"
	}' >> new.json"
 8. Отправить изменения на внешний репозиторий.
	"git add new.json"
	"git commit -m 'added changes to file new.json'"
	"git push" 
 9. Создать файл preferences.json
	"touch preferences.json"
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	"echo '{
	"film" : "Fight club",
	"series" : "Queen of the south",
	"season" : "summer",
	"country" : "ÜSA"
	}' >> preferences.json"
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	"echo '{
	"skills": ["Postman", "GIT", "SQL", "Terminal", "Theorÿ ISTQB", "Fiddler"]
	}' > sklls.json"
 12. Отправить сразу 2 файла на внешний репозиторий.
	"git add preferences.json sklls.json"
	"git commit -m 'added files preferences.json sklls.json'"
	"git push" 
 13. На веб интерфейсе создать файл bug_report.json.
	"https://github.com/Kokos001/Json/new/main"
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 17. Синхронизировать внешний и локальный репозиторий JSON
	"git pull"

XML
 1. Создать внешний репозиторий c названием XML.
	https://github.com/new
 2. Клонировать репозиторий XML на локальный компьютер.
	"git clone URL"
 3. Внутри локального XML создать файл “new.xml”.
	"touch new.xml"	
 4.  Добавить файл под гит.
	"git add new.xml"
 5. Закоммитить файл.
	"git commit -m 'added file new.xml'"
 6. Отправить файл на внешний GitHub репозиторий.
	"git push" 
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	"echo '<?xml version="1.0"?>
		   <new>
			<Name>Kokos</Name>
			<Age>35</Age>
			<Pets>2</Pets>
			<Salary>5000</Salary>
		   </new>' >> new.xml"
 8. Отправить изменения на внешний репозиторий.
	"git add new.xml"
	"git commit -m 'added changes to file new.xml'"
	"git push" 
 9. Создать файл preferences.xml
	"touch preferences.xml"
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	"echo '<?xml version="1.0"?>
		<preferences>
			<Movie>Fight club</Movie>
			<Series>Queen of the south</Series>
			<Season>Summer</Season>
			<Country>USA</Country>
		</preferences>' >> preferences.xml"
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	"echo '<?xml version="1.0"?>
		<skills>
     		   <First>Postman</First>
     		   <Second>SQL</Second>
      		   <Third>Fiddler</Third>
      		   <Fourth>ISTQB</Fourth>
		</skills>' > sklls.xml"
 12. Сделать коммит в одну строку.
	"git commit -m 'added files preferences.xml sklls.xml'"
 13. Отправить сразу 2 файла на внешний репозиторий.
	"git add preferences.json sklls.json"
	"git commit -m 'added files preferences.xml sklls.xml'"
	"git push"
 14. На веб интерфейсе создать файл bug_report.xml.
	"https://github.com/Kokos001/XML/new/main"
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий XML
	"git pull"
